server:
  port : ${SERVER_PORT:7080}
  max-http-header-size: 100000
spring:
  liquibase:
    change-log: ${LIQUIBASE_CHANGELOG:classpath:rootChangeLog.xml}
    enabled: ${LIQUIBASE_ENABLED:false}
  messages:
    basename: i18n.messages
  datasource:
    url: ${DB_URL}
    driverClassName: ${DB_DRIVER}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      transaction-isolation: TRANSACTION_READ_COMMITTED # TRANSACTION_READ_COMMITTED / TRANSACTION_REPEATABLE_READ / TRANSACTION_SERIALIZABLE
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        generate_statistics: false
        format_sql: false
        show-sql: false
        dialect: org.hibernate.dialect.PostgresPlusDialect
        default_schema: ${DB_SCHEMA:public}
  kafka:
    bootstrap-servers: ${KAFKA_URL}
    admin:
      properties:
        request.timeout.ms: ${KAFKA_REQUEST_TIMEOUT:5000}
    consumer:
      properties:
        max.poll.interval.ms: 600000
        max.poll.records: 10
      group-id: ${KAFKA_CONSUMER_ID}
      auto-offset-reset: latest
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  health:
    defaults:
      enabled: true

integration:
  order:
    burger: ${ORDER_BURGER_COMMAND_TOPIC:order-burger-command}
